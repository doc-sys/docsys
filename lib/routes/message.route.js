"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _expressValidator = require("express-validator");

var _authenticate = _interopRequireDefault(require("../lib/helpers/authenticate"));

var _validator = require("../lib/helpers/validator");

var _message = require("../controller/message.controller");

var initiate = _interopRequireWildcard(require("../lib/requestSchemas/message.initiateConvo.json"));

var getHistory = _interopRequireWildcard(require("../lib/requestSchemas/message.getHistory.json"));

var express = require('express');

var router = express.Router();
router.route('/')
/**
 * @api {get} /message/ Get conversations
 * @apiName messagesGetConvos
 * @apiGroup Messages
 * @apiDescription Gets the conversations for a single user. The actual messages are not send.
 * @apiSuccess {Array} conversations All conversations involving the user
 * @apiError (401) {String} AuthentificationError Not allowed to access ressource
 */
.get([_authenticate["default"], _message.getConversations], function (req, res) {
  res.status(200).json(res.locals.conversations);
})
/**
/**
 * @api {post} /message/ Create conversations
 * @apiName messagesCreateConvo
 * @apiGroup Messages
 * @apiDescription Initiates a new conversation.
 * @apiSuccess {String} convoId The conversation id
 * @apiError (401) {String} AuthentificationError Not allowed to access ressource
 */
.post([_authenticate["default"], (0, _expressValidator.checkSchema)(initiate), _validator.checkSchemaValidation, _message.createNewConversation], function (req, res) {
  res.status(200).json(res.locals.conversationId);
});
router.route('/:convoid')
/**
 * @api {get} /message/:convoid Get messages
 * @apiName messagesGetMessages
 * @apiGroup Messages
 * @apiDescription Gets the actual messages of a single conversation
 * @apiSuccess {Array} messages All messages in that conversation already ordered
 * @apiError (401) {String} AuthentificationError Not allowed to access ressource
 */
.get([_authenticate["default"], (0, _expressValidator.checkSchema)(getHistory), _validator.checkSchemaValidation, _message.getConversationHistory], function (req, res) {
  res.status(200).json(res.locals.history);
});
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yb3V0ZXMvbWVzc2FnZS5yb3V0ZS50cyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsInJvdXRlIiwiZ2V0IiwiYXV0aGVudGljYXRlIiwiZ2V0Q29udmVyc2F0aW9ucyIsInJlcSIsInJlcyIsInN0YXR1cyIsImpzb24iLCJsb2NhbHMiLCJjb252ZXJzYXRpb25zIiwicG9zdCIsImluaXRpYXRlIiwiY2hlY2tTY2hlbWFWYWxpZGF0aW9uIiwiY3JlYXRlTmV3Q29udmVyc2F0aW9uIiwiY29udmVyc2F0aW9uSWQiLCJnZXRIaXN0b3J5IiwiZ2V0Q29udmVyc2F0aW9uSGlzdG9yeSIsImhpc3RvcnkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFFQTs7QUFDQTs7QUFSQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQVVBLElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWI7QUFFQUQsTUFBTSxDQUFDRSxLQUFQLENBQWEsR0FBYjtBQUNJOzs7Ozs7OztBQURKLENBU0tDLEdBVEwsQ0FTUyxDQUFDQyx3QkFBRCxFQUFlQyx5QkFBZixDQVRULEVBUzJDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pEQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBRyxDQUFDRyxNQUFKLENBQVdDLGFBQWhDO0FBQ0gsQ0FYTDtBQVlJOzs7Ozs7Ozs7QUFaSixDQXFCS0MsSUFyQkwsQ0FxQlUsQ0FBQ1Isd0JBQUQsRUFBZSxtQ0FBWVMsUUFBWixDQUFmLEVBQXNDQyxnQ0FBdEMsRUFBNkRDLDhCQUE3RCxDQXJCVixFQXFCK0YsVUFBQ1QsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDckdBLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixHQUFHLENBQUNHLE1BQUosQ0FBV00sY0FBaEM7QUFDSCxDQXZCTDtBQXlCQWhCLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLFdBQWI7QUFDSTs7Ozs7Ozs7QUFESixDQVNLQyxHQVRMLENBU1MsQ0FBQ0Msd0JBQUQsRUFBZSxtQ0FBWWEsVUFBWixDQUFmLEVBQXdDSCxnQ0FBeEMsRUFBK0RJLCtCQUEvRCxDQVRULEVBU2lHLFVBQUNaLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3ZHQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkYsR0FBRyxDQUFDRyxNQUFKLENBQVdTLE9BQWhDO0FBQ0gsQ0FYTDtBQWFBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixNQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImxldCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5pbXBvcnQgeyBjaGVja1NjaGVtYSB9IGZyb20gJ2V4cHJlc3MtdmFsaWRhdG9yJ1xuaW1wb3J0IGF1dGhlbnRpY2F0ZSBmcm9tICcuLi9saWIvaGVscGVycy9hdXRoZW50aWNhdGUnXG5pbXBvcnQgeyBjaGVja1NjaGVtYVZhbGlkYXRpb24gfSBmcm9tICcuLi9saWIvaGVscGVycy92YWxpZGF0b3InXG5cbmltcG9ydCB7IGNyZWF0ZU5ld0NvbnZlcnNhdGlvbiwgZ2V0Q29udmVyc2F0aW9ucywgZ2V0Q29udmVyc2F0aW9uSGlzdG9yeSB9IGZyb20gJy4uL2NvbnRyb2xsZXIvbWVzc2FnZS5jb250cm9sbGVyJztcblxuaW1wb3J0ICogYXMgaW5pdGlhdGUgZnJvbSAnLi4vbGliL3JlcXVlc3RTY2hlbWFzL21lc3NhZ2UuaW5pdGlhdGVDb252by5qc29uJ1xuaW1wb3J0ICogYXMgZ2V0SGlzdG9yeSBmcm9tICcuLi9saWIvcmVxdWVzdFNjaGVtYXMvbWVzc2FnZS5nZXRIaXN0b3J5Lmpzb24nXG5cbmxldCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbnJvdXRlci5yb3V0ZSgnLycpXG4gICAgLyoqXG4gICAgICogQGFwaSB7Z2V0fSAvbWVzc2FnZS8gR2V0IGNvbnZlcnNhdGlvbnNcbiAgICAgKiBAYXBpTmFtZSBtZXNzYWdlc0dldENvbnZvc1xuICAgICAqIEBhcGlHcm91cCBNZXNzYWdlc1xuICAgICAqIEBhcGlEZXNjcmlwdGlvbiBHZXRzIHRoZSBjb252ZXJzYXRpb25zIGZvciBhIHNpbmdsZSB1c2VyLiBUaGUgYWN0dWFsIG1lc3NhZ2VzIGFyZSBub3Qgc2VuZC5cbiAgICAgKiBAYXBpU3VjY2VzcyB7QXJyYXl9IGNvbnZlcnNhdGlvbnMgQWxsIGNvbnZlcnNhdGlvbnMgaW52b2x2aW5nIHRoZSB1c2VyXG4gICAgICogQGFwaUVycm9yICg0MDEpIHtTdHJpbmd9IEF1dGhlbnRpZmljYXRpb25FcnJvciBOb3QgYWxsb3dlZCB0byBhY2Nlc3MgcmVzc291cmNlXG4gICAgICovXG4gICAgLmdldChbYXV0aGVudGljYXRlLCBnZXRDb252ZXJzYXRpb25zXSwgKHJlcSwgcmVzKSA9PiB7XG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlcy5sb2NhbHMuY29udmVyc2F0aW9ucylcbiAgICB9KVxuICAgIC8qKlxuICAgIC8qKlxuICAgICAqIEBhcGkge3Bvc3R9IC9tZXNzYWdlLyBDcmVhdGUgY29udmVyc2F0aW9uc1xuICAgICAqIEBhcGlOYW1lIG1lc3NhZ2VzQ3JlYXRlQ29udm9cbiAgICAgKiBAYXBpR3JvdXAgTWVzc2FnZXNcbiAgICAgKiBAYXBpRGVzY3JpcHRpb24gSW5pdGlhdGVzIGEgbmV3IGNvbnZlcnNhdGlvbi5cbiAgICAgKiBAYXBpU3VjY2VzcyB7U3RyaW5nfSBjb252b0lkIFRoZSBjb252ZXJzYXRpb24gaWRcbiAgICAgKiBAYXBpRXJyb3IgKDQwMSkge1N0cmluZ30gQXV0aGVudGlmaWNhdGlvbkVycm9yIE5vdCBhbGxvd2VkIHRvIGFjY2VzcyByZXNzb3VyY2VcbiAgICAgKi9cbiAgICAucG9zdChbYXV0aGVudGljYXRlLCBjaGVja1NjaGVtYShpbml0aWF0ZSksIGNoZWNrU2NoZW1hVmFsaWRhdGlvbiwgY3JlYXRlTmV3Q29udmVyc2F0aW9uXSwgKHJlcSwgcmVzKSA9PiB7XG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlcy5sb2NhbHMuY29udmVyc2F0aW9uSWQpXG4gICAgfSlcblxucm91dGVyLnJvdXRlKCcvOmNvbnZvaWQnKVxuICAgIC8qKlxuICAgICAqIEBhcGkge2dldH0gL21lc3NhZ2UvOmNvbnZvaWQgR2V0IG1lc3NhZ2VzXG4gICAgICogQGFwaU5hbWUgbWVzc2FnZXNHZXRNZXNzYWdlc1xuICAgICAqIEBhcGlHcm91cCBNZXNzYWdlc1xuICAgICAqIEBhcGlEZXNjcmlwdGlvbiBHZXRzIHRoZSBhY3R1YWwgbWVzc2FnZXMgb2YgYSBzaW5nbGUgY29udmVyc2F0aW9uXG4gICAgICogQGFwaVN1Y2Nlc3Mge0FycmF5fSBtZXNzYWdlcyBBbGwgbWVzc2FnZXMgaW4gdGhhdCBjb252ZXJzYXRpb24gYWxyZWFkeSBvcmRlcmVkXG4gICAgICogQGFwaUVycm9yICg0MDEpIHtTdHJpbmd9IEF1dGhlbnRpZmljYXRpb25FcnJvciBOb3QgYWxsb3dlZCB0byBhY2Nlc3MgcmVzc291cmNlXG4gICAgICovXG4gICAgLmdldChbYXV0aGVudGljYXRlLCBjaGVja1NjaGVtYShnZXRIaXN0b3J5KSwgY2hlY2tTY2hlbWFWYWxpZGF0aW9uLCBnZXRDb252ZXJzYXRpb25IaXN0b3J5XSwgKHJlcSwgcmVzKSA9PiB7XG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlcy5sb2NhbHMuaGlzdG9yeSlcbiAgICB9KVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlciJdfQ==