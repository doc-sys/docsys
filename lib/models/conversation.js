"use strict";

var mongoose = require('mongoose');

var conversation = new mongoose.Schema({
  convoId: {
    type: String,
    required: true,
    unique: true
  },
  participants: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  }],
  lastMessage: {
    type: Date,
    "default": function _default() {
      return Date.now();
    }
  },
  messages: [{
    from: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'User',
      required: true
    },
    content: {
      type: String,
      required: true
    },
    timestamp: {
      type: Date,
      "default": function _default() {
        return Date.now();
      }
    }
  }]
});
module.exports = {
  conversation: mongoose.model('Conversation', conversation)
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvY29udmVyc2F0aW9uLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImNvbnZlcnNhdGlvbiIsIlNjaGVtYSIsImNvbnZvSWQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1bmlxdWUiLCJwYXJ0aWNpcGFudHMiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwibGFzdE1lc3NhZ2UiLCJEYXRlIiwibm93IiwibWVzc2FnZXMiLCJmcm9tIiwiY29udGVudCIsInRpbWVzdGFtcCIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQU1DLFlBQVksR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQWIsQ0FBb0I7QUFDeENDLEVBQUFBLE9BQU8sRUFBRTtBQUNSQyxJQUFBQSxJQUFJLEVBQUVDLE1BREU7QUFFUkMsSUFBQUEsUUFBUSxFQUFFLElBRkY7QUFHUkMsSUFBQUEsTUFBTSxFQUFFO0FBSEEsR0FEK0I7QUFNeENDLEVBQUFBLFlBQVksRUFBRSxDQUNiO0FBQ0NKLElBQUFBLElBQUksRUFBRUwsUUFBUSxDQUFDRyxNQUFULENBQWdCTyxLQUFoQixDQUFzQkMsUUFEN0I7QUFFQ0MsSUFBQUEsR0FBRyxFQUFFLE1BRk47QUFHQ0wsSUFBQUEsUUFBUSxFQUFFO0FBSFgsR0FEYSxDQU4wQjtBQWF4Q00sRUFBQUEsV0FBVyxFQUFFO0FBQ1pSLElBQUFBLElBQUksRUFBRVMsSUFETTtBQUVaLGVBQVM7QUFBQSxhQUFNQSxJQUFJLENBQUNDLEdBQUwsRUFBTjtBQUFBO0FBRkcsR0FiMkI7QUFpQnhDQyxFQUFBQSxRQUFRLEVBQUUsQ0FDVDtBQUNDQyxJQUFBQSxJQUFJLEVBQUU7QUFDTFosTUFBQUEsSUFBSSxFQUFFTCxRQUFRLENBQUNHLE1BQVQsQ0FBZ0JPLEtBQWhCLENBQXNCQyxRQUR2QjtBQUVMQyxNQUFBQSxHQUFHLEVBQUUsTUFGQTtBQUdMTCxNQUFBQSxRQUFRLEVBQUU7QUFITCxLQURQO0FBTUNXLElBQUFBLE9BQU8sRUFBRTtBQUFFYixNQUFBQSxJQUFJLEVBQUVDLE1BQVI7QUFBZ0JDLE1BQUFBLFFBQVEsRUFBRTtBQUExQixLQU5WO0FBT0NZLElBQUFBLFNBQVMsRUFBRTtBQUFFZCxNQUFBQSxJQUFJLEVBQUVTLElBQVI7QUFBYyxpQkFBUztBQUFBLGVBQU1BLElBQUksQ0FBQ0MsR0FBTCxFQUFOO0FBQUE7QUFBdkI7QUFQWixHQURTO0FBakI4QixDQUFwQixDQUFyQjtBQThCQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVuQixFQUFBQSxZQUFZLEVBQUVGLFFBQVEsQ0FBQ3NCLEtBQVQsQ0FBZSxjQUFmLEVBQStCcEIsWUFBL0I7QUFBaEIsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpXG5cbmNvbnN0IGNvbnZlcnNhdGlvbiA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuXHRjb252b0lkOiB7XG5cdFx0dHlwZTogU3RyaW5nLFxuXHRcdHJlcXVpcmVkOiB0cnVlLFxuXHRcdHVuaXF1ZTogdHJ1ZSxcblx0fSxcblx0cGFydGljaXBhbnRzOiBbXG5cdFx0e1xuXHRcdFx0dHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxuXHRcdFx0cmVmOiAnVXNlcicsXG5cdFx0XHRyZXF1aXJlZDogdHJ1ZSxcblx0XHR9LFxuXHRdLFxuXHRsYXN0TWVzc2FnZToge1xuXHRcdHR5cGU6IERhdGUsXG5cdFx0ZGVmYXVsdDogKCkgPT4gRGF0ZS5ub3coKSxcblx0fSxcblx0bWVzc2FnZXM6IFtcblx0XHR7XG5cdFx0XHRmcm9tOiB7XG5cdFx0XHRcdHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcblx0XHRcdFx0cmVmOiAnVXNlcicsXG5cdFx0XHRcdHJlcXVpcmVkOiB0cnVlLFxuXHRcdFx0fSxcblx0XHRcdGNvbnRlbnQ6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LFxuXHRcdFx0dGltZXN0YW1wOiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6ICgpID0+IERhdGUubm93KCkgfSxcblx0XHR9LFxuXHRdLFxufSlcblxubW9kdWxlLmV4cG9ydHMgPSB7IGNvbnZlcnNhdGlvbjogbW9uZ29vc2UubW9kZWwoJ0NvbnZlcnNhdGlvbicsIGNvbnZlcnNhdGlvbikgfVxuIl19