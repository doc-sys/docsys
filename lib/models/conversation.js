"use strict";

var mongoose = require('mongoose');

var conversation = new mongoose.Schema({
  convoId: {
    type: String,
    required: true,
    unique: true
  },
  participants: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  }],
  lastMessage: {
    type: Date,
    "default": function _default() {
      return Date.now();
    }
  },
  messages: [{
    from: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'User',
      required: true
    },
    content: {
      type: String,
      required: true
    },
    timestamp: {
      type: Date,
      "default": function _default() {
        return Date.now();
      }
    }
  }]
});
module.exports = {
  conversation: mongoose.model('Conversation', conversation)
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvY29udmVyc2F0aW9uLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsImNvbnZlcnNhdGlvbiIsIlNjaGVtYSIsImNvbnZvSWQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1bmlxdWUiLCJwYXJ0aWNpcGFudHMiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwibGFzdE1lc3NhZ2UiLCJEYXRlIiwibm93IiwibWVzc2FnZXMiLCJmcm9tIiwiY29udGVudCIsInRpbWVzdGFtcCIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQU1DLFlBQVksR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQWIsQ0FBb0I7QUFDeENDLEVBQUFBLE9BQU8sRUFBRTtBQUNSQyxJQUFBQSxJQUFJLEVBQUVDLE1BREU7QUFFUkMsSUFBQUEsUUFBUSxFQUFFLElBRkY7QUFHUkMsSUFBQUEsTUFBTSxFQUFFO0FBSEEsR0FEK0I7QUFNeENDLEVBQUFBLFlBQVksRUFBRSxDQUNiO0FBQ0NKLElBQUFBLElBQUksRUFBRUwsUUFBUSxDQUFDRyxNQUFULENBQWdCTyxLQUFoQixDQUFzQkMsUUFEN0I7QUFFQ0MsSUFBQUEsR0FBRyxFQUFFLE1BRk47QUFHQ0wsSUFBQUEsUUFBUSxFQUFFO0FBSFgsR0FEYSxDQU4wQjtBQWF4Q00sRUFBQUEsV0FBVyxFQUFFO0FBQ1pSLElBQUFBLElBQUksRUFBRVMsSUFETTtBQUVaLGVBQVM7QUFBQSxhQUFNQSxJQUFJLENBQUNDLEdBQUwsRUFBTjtBQUFBO0FBRkcsR0FiMkI7QUFpQnhDQyxFQUFBQSxRQUFRLEVBQUUsQ0FDVDtBQUNDQyxJQUFBQSxJQUFJLEVBQUU7QUFDTFosTUFBQUEsSUFBSSxFQUFFTCxRQUFRLENBQUNHLE1BQVQsQ0FBZ0JPLEtBQWhCLENBQXNCQyxRQUR2QjtBQUVMQyxNQUFBQSxHQUFHLEVBQUUsTUFGQTtBQUdMTCxNQUFBQSxRQUFRLEVBQUU7QUFITCxLQURQO0FBTUNXLElBQUFBLE9BQU8sRUFBRTtBQUFFYixNQUFBQSxJQUFJLEVBQUVDLE1BQVI7QUFBZ0JDLE1BQUFBLFFBQVEsRUFBRTtBQUExQixLQU5WO0FBT0NZLElBQUFBLFNBQVMsRUFBRTtBQUFFZCxNQUFBQSxJQUFJLEVBQUVTLElBQVI7QUFBYyxpQkFBUztBQUFBLGVBQU1BLElBQUksQ0FBQ0MsR0FBTCxFQUFOO0FBQUE7QUFBdkI7QUFQWixHQURTO0FBakI4QixDQUFwQixDQUFyQjtBQThCQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVuQixFQUFBQSxZQUFZLEVBQUVGLFFBQVEsQ0FBQ3NCLEtBQVQsQ0FBZSxjQUFmLEVBQStCcEIsWUFBL0I7QUFBaEIsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpXHJcblxyXG5jb25zdCBjb252ZXJzYXRpb24gPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcclxuXHRjb252b0lkOiB7XHJcblx0XHR0eXBlOiBTdHJpbmcsXHJcblx0XHRyZXF1aXJlZDogdHJ1ZSxcclxuXHRcdHVuaXF1ZTogdHJ1ZSxcclxuXHR9LFxyXG5cdHBhcnRpY2lwYW50czogW1xyXG5cdFx0e1xyXG5cdFx0XHR0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRcdHJlZjogJ1VzZXInLFxyXG5cdFx0XHRyZXF1aXJlZDogdHJ1ZSxcclxuXHRcdH0sXHJcblx0XSxcclxuXHRsYXN0TWVzc2FnZToge1xyXG5cdFx0dHlwZTogRGF0ZSxcclxuXHRcdGRlZmF1bHQ6ICgpID0+IERhdGUubm93KCksXHJcblx0fSxcclxuXHRtZXNzYWdlczogW1xyXG5cdFx0e1xyXG5cdFx0XHRmcm9tOiB7XHJcblx0XHRcdFx0dHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG5cdFx0XHRcdHJlZjogJ1VzZXInLFxyXG5cdFx0XHRcdHJlcXVpcmVkOiB0cnVlLFxyXG5cdFx0XHR9LFxyXG5cdFx0XHRjb250ZW50OiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcclxuXHRcdFx0dGltZXN0YW1wOiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6ICgpID0+IERhdGUubm93KCkgfSxcclxuXHRcdH0sXHJcblx0XSxcclxufSlcclxuXHJcbm1vZHVsZS5leHBvcnRzID0geyBjb252ZXJzYXRpb246IG1vbmdvb3NlLm1vZGVsKCdDb252ZXJzYXRpb24nLCBjb252ZXJzYXRpb24pIH1cclxuIl19