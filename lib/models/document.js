"use strict";

var mongoose = require('mongoose');

var document = new mongoose.Schema({
  title: {
    type: String,
    required: true
  },
  created: {
    type: Date,
    "default": Date.now()
  },
  dated: {
    type: Date
  },
  content: {
    type: String
  },
  keywords: {
    type: [String],
    minlength: 3
  },
  fileId: {
    type: String,
    unique: true
  },
  owner: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  sharedWith: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    "default": []
  }],
  lockedBy: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    "default": null
  },
  locked: {
    type: Boolean,
    "default": false
  },
  mime: {
    type: String
  },
  extension: {
    type: String
  },
  pageHashes: {
    type: [String],
    required: true
  },
  log: [{
    timestamp: {
      type: Date,
      "default": Date.now()
    },
    user: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'User',
      required: true
    },
    message: {
      type: String,
      required: true
    }
  }]
});

var handleE11000 = function handleE11000(error, res, next) {
  if (error.name === 'MongoError' && error.code === 11000) {
    next(new Error('File already exists'));
  } else {
    next();
  }
};

document.post('save', handleE11000);
document.post('update', handleE11000);
document.post('findOneAndUpdate', handleE11000);
document.post('insertMany', handleE11000);
module.exports = {
  doc: mongoose.model('Doc', document)
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvZG9jdW1lbnQuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiZG9jdW1lbnQiLCJTY2hlbWEiLCJ0aXRsZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImNyZWF0ZWQiLCJEYXRlIiwibm93IiwiZGF0ZWQiLCJjb250ZW50Iiwia2V5d29yZHMiLCJtaW5sZW5ndGgiLCJmaWxlSWQiLCJ1bmlxdWUiLCJvd25lciIsIlR5cGVzIiwiT2JqZWN0SWQiLCJyZWYiLCJzaGFyZWRXaXRoIiwibG9ja2VkQnkiLCJsb2NrZWQiLCJCb29sZWFuIiwibWltZSIsImV4dGVuc2lvbiIsInBhZ2VIYXNoZXMiLCJsb2ciLCJ0aW1lc3RhbXAiLCJ1c2VyIiwibWVzc2FnZSIsImhhbmRsZUUxMTAwMCIsImVycm9yIiwicmVzIiwibmV4dCIsIm5hbWUiLCJjb2RlIiwiRXJyb3IiLCJwb3N0IiwibW9kdWxlIiwiZXhwb3J0cyIsImRvYyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUEsSUFBSUMsUUFBUSxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBYixDQUFvQjtBQUNsQ0MsRUFBQUEsS0FBSyxFQUFFO0FBQ05DLElBQUFBLElBQUksRUFBRUMsTUFEQTtBQUVOQyxJQUFBQSxRQUFRLEVBQUU7QUFGSixHQUQyQjtBQUtsQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQ1JILElBQUFBLElBQUksRUFBRUksSUFERTtBQUVSLGVBQVNBLElBQUksQ0FBQ0MsR0FBTDtBQUZELEdBTHlCO0FBU2xDQyxFQUFBQSxLQUFLLEVBQUU7QUFDTk4sSUFBQUEsSUFBSSxFQUFFSTtBQURBLEdBVDJCO0FBWWxDRyxFQUFBQSxPQUFPLEVBQUU7QUFDUlAsSUFBQUEsSUFBSSxFQUFFQztBQURFLEdBWnlCO0FBZWxDTyxFQUFBQSxRQUFRLEVBQUU7QUFDVFIsSUFBQUEsSUFBSSxF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c291cmNlc0NvbnRlbnQiOlsibGV0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKVxyXG5cclxubGV0IGRvY3VtZW50ID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcblx0dGl0bGU6IHtcclxuXHRcdHR5cGU6IFN0cmluZyxcclxuXHRcdHJlcXVpcmVkOiB0cnVlLFxyXG5cdH0sXHJcblx0Y3JlYXRlZDoge1xyXG5cdFx0dHlwZTogRGF0ZSxcclxuXHRcdGRlZmF1bHQ6IERhdGUubm93KCksXHJcblx0fSxcclxuXHRkYXRlZDoge1xyXG5cdFx0dHlwZTogRGF0ZSxcclxuXHR9LFxyXG5cdGNvbnRlbnQ6IHtcclxuXHRcdHR5cGU6IFN0cmluZyxcclxuXHR9LFxyXG5cdGtleXdvcmRzOiB7XHJcblx0XHR0eXBlOiBbU3RyaW5nXSxcclxuXHRcdG1pbmxlbmd0aDogMyxcclxuXHR9LFxyXG5cdGZpbGVJZDoge1xyXG5cdFx0dHlwZTogU3RyaW5nLFxyXG5cdFx0dW5pcXVlOiB0cnVlLFxyXG5cdH0sXHJcblx0b3duZXI6IHtcclxuXHRcdHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuXHRcdHJlZjogJ1VzZXInLFxyXG5cdFx0cmVxdWlyZWQ6IHRydWUsXHJcblx0fSxcclxuXHRzaGFyZWRXaXRoOiBbXHJcblx0XHR7XHJcblx0XHRcdHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuXHRcdFx0cmVmOiAnVXNlcicsXHJcblx0XHRcdGRlZmF1bHQ6IFtdLFxyXG5cdFx0fSxcclxuXHRdLFxyXG5cdGxvY2tlZEJ5OiB7XHJcblx0XHR0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRyZWY6ICdVc2VyJyxcclxuXHRcdGRlZmF1bHQ6IG51bGwsXHJcblx0fSxcclxuXHRsb2NrZWQ6IHtcclxuXHRcdHR5cGU6IEJvb2xlYW4sXHJcblx0XHRkZWZhdWx0OiBmYWxzZSxcclxuXHR9LFxyXG5cdG1pbWU6IHtcclxuXHRcdHR5cGU6IFN0cmluZyxcclxuXHR9LFxyXG5cdGV4dGVuc2lvbjoge1xyXG5cdFx0dHlwZTogU3RyaW5nLFxyXG5cdH0sXHJcblx0cGFnZUhhc2hlczoge1xyXG5cdFx0dHlwZTogW1N0cmluZ10sXHJcblx0XHRyZXF1aXJlZDogdHJ1ZSxcclxuXHR9LFxyXG5cdGxvZzogW1xyXG5cdFx0e1xyXG5cdFx0XHR0aW1lc3RhbXA6IHtcclxuXHRcdFx0XHR0eXBlOiBEYXRlLFxyXG5cdFx0XHRcdGRlZmF1bHQ6IERhdGUubm93KCksXHJcblx0XHRcdH0sXHJcblx0XHRcdHVzZXI6IHtcclxuXHRcdFx0XHR0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcblx0XHRcdFx0cmVmOiAnVXNlcicsXHJcblx0XHRcdFx0cmVxdWlyZWQ6IHRydWUsXHJcblx0XHRcdH0sXHJcblx0XHRcdG1lc3NhZ2U6IHtcclxuXHRcdFx0XHR0eXBlOiBTdHJpbmcsXHJcblx0XHRcdFx0cmVxdWlyZWQ6IHRydWUsXHJcblx0XHRcdH0sXHJcblx0XHR9LFxyXG5cdF0sXHJcbn0pXHJcblxyXG52YXIgaGFuZGxlRTExMDAwID0gZnVuY3Rpb24gKGVycm9yLCByZXMsIG5leHQpIHtcclxuXHRpZiAoZXJyb3IubmFtZSA9PT0gJ01vbmdvRXJyb3InICYmIGVycm9yLmNvZGUgPT09IDExMDAwKSB7XHJcblx0XHRuZXh0KG5ldyBFcnJvcignRmlsZSBhbHJlYWR5IGV4aXN0cycpKVxyXG5cdH0gZWxzZSB7XHJcblx0XHRuZXh0KClcclxuXHR9XHJcbn1cclxuXHJcbmRvY3VtZW50LnBvc3QoJ3NhdmUnLCBoYW5kbGVFMTEwMDApXHJcbmRvY3VtZW50LnBvc3QoJ3VwZGF0ZScsIGhhbmRsZUUxMTAwMClcclxuZG9jdW1lbnQucG9zdCgnZmluZE9uZUFuZFVwZGF0ZScsIGhhbmRsZUUxMTAwMClcclxuZG9jdW1lbnQucG9zdCgnaW5zZXJ0TWFueScsIGhhbmRsZUUxMTAwMClcclxuXHJcbm1vZHVsZS5leHBvcnRzID0geyBkb2M6IG1vbmdvb3NlLm1vZGVsKCdEb2MnLCBkb2N1bWVudCkgfVxyXG4iXX0=