"use strict";

/**
 * Module dependencies.
 */
var app = require('./app');

var debug = require('debug')('docsys:server');

var http = require('http');
/**
 * Get port from environment and store in Express.
 */


var port = normalizePort(process.env.PORT || '3001');
app.set('port', port);
/**
 * Create HTTP server.
 */

var server = http.createServer(app);
/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}
/**
 * Event listener for HTTP server "error" event.
 */


function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port; // handle specific listen errors with friendly messages

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;

    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;

    default:
      throw error;
  }
}
/**
 * Event listener for HTTP server "listening" event.
 */


function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6WyJhcHAiLCJyZXF1aXJlIiwiZGVidWciLCJodHRwIiwicG9ydCIsIm5vcm1hbGl6ZVBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInNldCIsInNlcnZlciIsImNyZWF0ZVNlcnZlciIsImxpc3RlbiIsIm9uIiwib25FcnJvciIsIm9uTGlzdGVuaW5nIiwidmFsIiwicGFyc2VJbnQiLCJpc05hTiIsImVycm9yIiwic3lzY2FsbCIsImJpbmQiLCJjb2RlIiwiY29uc29sZSIsImV4aXQiLCJhZGRyIiwiYWRkcmVzcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7O0FBSUEsSUFBSUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFqQjs7QUFDQSxJQUFJQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxPQUFELENBQVAsQ0FBaUIsZUFBakIsQ0FBWjs7QUFDQSxJQUFJRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQWxCO0FBRUE7Ozs7O0FBSUEsSUFBSUcsSUFBSSxHQUFHQyxhQUFhLENBQUNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLE1BQXJCLENBQXhCO0FBQ0FSLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLE1BQVIsRUFBZ0JMLElBQWhCO0FBRUE7Ozs7QUFJQSxJQUFJTSxNQUFNLEdBQUdQLElBQUksQ0FBQ1EsWUFBTCxDQUFrQlgsR0FBbEIsQ0FBYjtBQUVBOzs7O0FBSUFVLE1BQU0sQ0FBQ0UsTUFBUCxDQUFjUixJQUFkO0FBQ0FNLE1BQU0sQ0FBQ0csRUFBUCxDQUFVLE9BQVYsRUFBbUJDLE9BQW5CO0FBQ0FKLE1BQU0sQ0FBQ0csRUFBUCxDQUFVLFdBQVYsRUFBdUJFLFdBQXZCO0FBRUE7Ozs7QUFJQSxTQUFTVixhQUFULENBQXVCVyxHQUF2QixFQUFpQztBQUNoQyxNQUFJWixJQUFJLEdBQUdhLFFBQVEsQ0FBQ0QsR0FBRCxFQUFNLEVBQU4sQ0FBbkI7O0FBRUEsTUFBSUUsS0FBSyxDQUFDZCxJQUFELENBQVQsRUFBaUI7QUFDaEI7QUFDQSxXQUFPWSxHQUFQO0FBQ0E7O0FBRUQsTUFBSVosSUFBSSxJQUFJLENBQVosRUFBZTtBQUNkO0FBQ0EsV0FBT0EsSUFBUDtBQUNBOztBQUVELFNBQU8sS0FBUDtBQUNBO0FBRUQ7Ozs7O0FBSUEsU0FBU1UsT0FBVCxDQUFpQkssS0FBakIsRUFBNkI7QUFDNUIsTUFBSUEsS0FBSyxDQUFDQyxPQUFOLEtBQWtCLFFBQXRCLEVBQWdDO0FBQy9CLFVBQU1ELEtBQU47QUFDQTs7QUFFRCxNQUFJRSxJQUFJLEdBQUcsT0FBT2pCLElBQVAsS0FBZ0IsUUFBaEIsR0FBMkIsVUFBVUEsSUFBckMsR0FBNEMsVUFBVUEsSUFBakUsQ0FMNEIsQ0FPNUI7O0FBQ0EsVUFBUWUsS0FBSyxDQUFDRyxJQUFkO0FBQ0MsU0FBSyxRQUFMO0FBQ0NDLE1BQUFBLE9BQU8sQ0FBQ0osS0FBUixDQUFjRSxJQUFJLEdBQUcsK0JBQXJCO0FBQ0FmLE1BQUFBLE9BQU8sQ0FBQ2tCLElBQVIsQ0FBYSxDQUFiO0FBQ0E7O0FBQ0QsU0FBSyxZQUFMO0FBQ0NELE1BQUFBLE9BQU8sQ0FBQ0osS0FBUixDQUFjRSxJQUFJLEdBQUcsb0JBQXJCO0FBQ0FmLE1BQUFBLE9BQU8sQ0FBQ2tCLElBQVIsQ0FBYSxDQUFiO0FBQ0E7O0FBQ0Q7QUFDQyxZQUFNTCxLQUFOO0FBVkY7QUFZQTtBQUVEOzs7OztBQUlBLFNBQVNKLFdBQVQsR0FBdUI7QUFDdEIsTUFBSVUsSUFBSSxHQUFHZixNQUFNLENBQUNnQixPQUFQLEVBQVg7QUFDQSxNQUFJTCxJQUFJLEdBQUcsT0FBT0ksSUFBUCxLQUFnQixRQUFoQixHQUEyQixVQUFVQSxJQUFyQyxHQUE0QyxVQUFVQSxJQUFJLENBQUNyQixJQUF0RTtBQUNBRixFQUFBQSxLQUFLLENBQUMsa0JBQWtCbUIsSUFBbkIsQ0FBTDtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXHJcbiAqL1xyXG5cclxudmFyIGFwcCA9IHJlcXVpcmUoJy4vYXBwJylcclxudmFyIGRlYnVnID0gcmVxdWlyZSgnZGVidWcnKSgnZG9jc3lzOnNlcnZlcicpXHJcbnZhciBodHRwID0gcmVxdWlyZSgnaHR0cCcpXHJcblxyXG4vKipcclxuICogR2V0IHBvcnQgZnJvbSBlbnZpcm9ubWVudCBhbmQgc3RvcmUgaW4gRXhwcmVzcy5cclxuICovXHJcblxyXG52YXIgcG9ydCA9IG5vcm1hbGl6ZVBvcnQocHJvY2Vzcy5lbnYuUE9SVCB8fCAnMzAwMScpXHJcbmFwcC5zZXQoJ3BvcnQnLCBwb3J0KVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBIVFRQIHNlcnZlci5cclxuICovXHJcblxyXG52YXIgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKVxyXG5cclxuLyoqXHJcbiAqIExpc3RlbiBvbiBwcm92aWRlZCBwb3J0LCBvbiBhbGwgbmV0d29yayBpbnRlcmZhY2VzLlxyXG4gKi9cclxuXHJcbnNlcnZlci5saXN0ZW4ocG9ydClcclxuc2VydmVyLm9uKCdlcnJvcicsIG9uRXJyb3IpXHJcbnNlcnZlci5vbignbGlzdGVuaW5nJywgb25MaXN0ZW5pbmcpXHJcblxyXG4vKipcclxuICogTm9ybWFsaXplIGEgcG9ydCBpbnRvIGEgbnVtYmVyLCBzdHJpbmcsIG9yIGZhbHNlLlxyXG4gKi9cclxuXHJcbmZ1bmN0aW9uIG5vcm1hbGl6ZVBvcnQodmFsOiBhbnkpIHtcclxuXHR2YXIgcG9ydCA9IHBhcnNlSW50KHZhbCwgMTApXHJcblxyXG5cdGlmIChpc05hTihwb3J0KSkge1xyXG5cdFx0Ly8gbmFtZWQgcGlwZVxyXG5cdFx0cmV0dXJuIHZhbFxyXG5cdH1cclxuXHJcblx0aWYgKHBvcnQgPj0gMCkge1xyXG5cdFx0Ly8gcG9ydCBudW1iZXJcclxuXHRcdHJldHVybiBwb3J0XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZmFsc2VcclxufVxyXG5cclxuLyoqXHJcbiAqIEV2ZW50IGxpc3RlbmVyIGZvciBIVFRQIHNlcnZlciBcImVycm9yXCIgZXZlbnQuXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gb25FcnJvcihlcnJvcjogYW55KSB7XHJcblx0aWYgKGVycm9yLnN5c2NhbGwgIT09ICdsaXN0ZW4nKSB7XHJcblx0XHR0aHJvdyBlcnJvclxyXG5cdH1cclxuXHJcblx0dmFyIGJpbmQgPSB0eXBlb2YgcG9ydCA9PT0gJ3N0cmluZycgPyAnUGlwZSAnICsgcG9ydCA6ICdQb3J0ICcgKyBwb3J0XHJcblxyXG5cdC8vIGhhbmRsZSBzcGVjaWZpYyBsaXN0ZW4gZXJyb3JzIHdpdGggZnJpZW5kbHkgbWVzc2FnZXNcclxuXHRzd2l0Y2ggKGVycm9yLmNvZGUpIHtcclxuXHRcdGNhc2UgJ0VBQ0NFUyc6XHJcblx0XHRcdGNvbnNvbGUuZXJyb3IoYmluZCArICcgcmVxdWlyZXMgZWxldmF0ZWQgcHJpdmlsZWdlcycpXHJcblx0XHRcdHByb2Nlc3MuZXhpdCgxKVxyXG5cdFx0XHRicmVha1xyXG5cdFx0Y2FzZSAnRUFERFJJTlVTRSc6XHJcblx0XHRcdGNvbnNvbGUuZXJyb3IoYmluZCArICcgaXMgYWxyZWFkeSBpbiB1c2UnKVxyXG5cdFx0XHRwcm9jZXNzLmV4aXQoMSlcclxuXHRcdFx0YnJlYWtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHRocm93IGVycm9yXHJcblx0fVxyXG59XHJcblxyXG4vKipcclxuICogRXZlbnQgbGlzdGVuZXIgZm9yIEhUVFAgc2VydmVyIFwibGlzdGVuaW5nXCIgZXZlbnQuXHJcbiAqL1xyXG5cclxuZnVuY3Rpb24gb25MaXN0ZW5pbmcoKSB7XHJcblx0dmFyIGFkZHIgPSBzZXJ2ZXIuYWRkcmVzcygpXHJcblx0dmFyIGJpbmQgPSB0eXBlb2YgYWRkciA9PT0gJ3N0cmluZycgPyAncGlwZSAnICsgYWRkciA6ICdwb3J0ICcgKyBhZGRyLnBvcnRcclxuXHRkZWJ1ZygnTGlzdGVuaW5nIG9uICcgKyBiaW5kKVxyXG59XHJcbiJdfQ==