[
  {
    "type": "unlock",
    "url": "/document/checkout/:fileid",
    "title": "",
    "name": "documentAdminUnlock",
    "group": "Document",
    "description": "<p>Unlocks a locked document without actually submitting a new document file. Requires user to be an admin</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fileid",
            "description": "<p>The fileid as part of the POST URL</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "Object",
            "optional": false,
            "field": "The",
            "description": "<p>unlocked document</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "optional": false,
            "field": "PermissionError",
            "description": "<p>Not allowed to UNLOCK this file</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "String",
            "optional": false,
            "field": "InternalError",
            "description": "<p>Something went wrong</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/document.route.ts",
    "groupTitle": "Document"
  },
  {
    "type": "post",
    "url": "/document/checkout/:fileid",
    "title": "",
    "name": "documentCheckin",
    "group": "Document",
    "description": "<p>Accepts an upload for a locked file and unlocks said file</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fileid",
            "description": "<p>The fileid as part of the POST URL</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "Object",
            "optional": false,
            "field": "The",
            "description": "<p>uploaded document</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "optional": false,
            "field": "PermissionError",
            "description": "<p>Not allowed to POST this file</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "String",
            "optional": false,
            "field": "InternalError",
            "description": "<p>Something went wrong</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/document.route.ts",
    "groupTitle": "Document"
  },
  {
    "type": "get",
    "url": "/document/checkout/:fileid",
    "title": "Document checkout",
    "name": "documentCheckout",
    "group": "Document",
    "description": "<p>Checks out document and sends files as ZIP archive</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fileid",
            "description": "<p>The fileid as part of the GET URL</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "Stream",
            "optional": false,
            "field": "ZIP",
            "description": "<p>file stream</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "optional": false,
            "field": "PermissionError",
            "description": "<p>Not allowed to GET this file</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "String",
            "optional": false,
            "field": "InternalError",
            "description": "<p>Something went wrong</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/document.route.ts",
    "groupTitle": "Document"
  },
  {
    "type": "post",
    "url": "/document/",
    "title": "New document",
    "name": "documentCreate",
    "group": "Document",
    "description": "<p>Creates and uploads a new documents with its body.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Buffer[]",
            "optional": false,
            "field": "files",
            "description": "<p>Page(s) for the document</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>Documents subject or title</p>"
          },
          {
            "group": "Parameter",
            "type": "Date",
            "optional": false,
            "field": "dated",
            "description": "<p>Date the original document was recieved</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "comment",
            "description": "<p>Comment to append to log</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "document",
            "description": "<p>The created document</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "415": [
          {
            "group": "415",
            "type": "String",
            "optional": false,
            "field": "FileTypeError",
            "description": "<p>Filetype is not supported. So far only PDFs and picture types are supported</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "String",
            "optional": false,
            "field": "InternalError",
            "description": "<p>Something went wrong</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/document.route.ts",
    "groupTitle": "Document"
  },
  {
    "type": "get",
    "url": "/document/own",
    "title": "Own documents",
    "name": "documentGetOwn",
    "group": "Document",
    "description": "<p>Returns the users documents</p>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "docs",
            "description": "<p>User documents basic metadata</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "type": "String",
            "optional": false,
            "field": "PermissionError",
            "description": "<p>Not allowed to GET this file</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "String",
            "optional": false,
            "field": "InternalError",
            "description": "<p>Something went wrong</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/document.route.ts",
    "groupTitle": "Document"
  },
  {
    "type": "get",
    "url": "/document/shared",
    "title": "Shared documents",
    "name": "documentGetShared",
    "group": "Document",
    "description": "<p>Returns the documents shared with the user</p>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "sharedDocs",
            "description": "<p>Shared documents basic metadata</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "type": "String",
            "optional": false,
            "field": "PermissionError",
            "description": "<p>Not allowed to GET this file</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "String",
            "optional": false,
            "field": "InternalError",
            "description": "<p>Something went wrong</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/document.route.ts",
    "groupTitle": "Document"
  },
  {
    "type": "get",
    "url": "/document/:fileid",
    "title": "Get single document",
    "name": "documentGetSingle",
    "group": "Document",
    "description": "<p>Returns the single requested document</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fileid",
            "description": "<p>The fileid as part of the GET URL</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "document",
            "description": "<p>The requested object</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "type": "String",
            "optional": false,
            "field": "PermissionError",
            "description": "<p>Not allowed to GET this file</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "String",
            "optional": false,
            "field": "InternalError",
            "description": "<p>Something went wrong</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/document.route.ts",
    "groupTitle": "Document"
  },
  {
    "type": "post",
    "url": "/document/share/:fileid",
    "title": "",
    "name": "documentShareFile",
    "group": "Document",
    "description": "<p>Shares file with a new user</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "fileid",
            "description": "<p>The fileid as part of the POST URL</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "whoToShare",
            "description": "<p>Username to share the file with. Provided in body or query.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "200": [
          {
            "group": "200",
            "type": "Object",
            "optional": false,
            "field": "The",
            "description": "<p>updated document</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "optional": false,
            "field": "PermissionError",
            "description": "<p>Not allowed to edit this file</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "type": "String",
            "optional": false,
            "field": "InternalError",
            "description": "<p>Something went wrong</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/document.route.ts",
    "groupTitle": "Document"
  },
  {
    "type": "get",
    "url": "/document/",
    "title": "All documents",
    "name": "documentsGetAll",
    "group": "Document",
    "description": "<p>Gets all documents on the instance. Can only be accessed by an admin.</p>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "document",
            "description": "<p>All documents</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "optional": false,
            "field": "NotAuthorized",
            "description": "<p>Only admins are allow to access this ressource</p>"
          }
        ],
        "500": [
          {
            "group": "500",
            "optional": false,
            "field": "InternalServerError",
            "description": "<p>Something went wron processing your request</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/document.route.ts",
    "groupTitle": "Document"
  },
  {
    "type": "get",
    "url": "/",
    "title": "Server health",
    "name": "serverPingHealth",
    "group": "Root",
    "description": "<p>Returns information on the server health</p>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "healt",
            "description": "<p>Server health information</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "500": [
          {
            "group": "500",
            "optional": false,
            "field": "InternalServerError",
            "description": "<p>Something went wron processing your request</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/index.route.ts",
    "groupTitle": "Root"
  },
  {
    "type": "get",
    "url": "/user/",
    "title": "Get All Users",
    "name": "UserNameAutoComplete",
    "group": "User",
    "description": "<p>Gives back the full user list</p>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "user",
            "description": "<p>List of user profiles</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "500": [
          {
            "group": "500",
            "type": "String",
            "optional": false,
            "field": "InternalError",
            "description": "<p>Something went wrong.</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/user.route.ts",
    "groupTitle": "User"
  },
  {
    "type": "delete",
    "url": "/user/:username",
    "title": "Delete user",
    "name": "userDeleteSingle",
    "group": "User",
    "description": "<p>Deletes a single user</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "user",
            "description": "<p>Username</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "type": "String",
            "optional": false,
            "field": "AuthentificationError",
            "description": "<p>Not allowed to access ressource</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/user.route.ts",
    "groupTitle": "User"
  },
  {
    "type": "get",
    "url": "/user/:username",
    "title": "Get single user",
    "name": "userGetSingle",
    "group": "User",
    "description": "<p>Returns a single user object without password</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "user",
            "description": "<p>User profile</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "type": "String",
            "optional": false,
            "field": "AuthentificationError",
            "description": "<p>Not allowed to access ressource</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/user.route.ts",
    "groupTitle": "User"
  },
  {
    "type": "post",
    "url": "/user/login",
    "title": "User login",
    "name": "userLogin",
    "group": "User",
    "description": "<p>Logs user in and returns the user and API token</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": ""
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "user",
            "description": "<p>User profile</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "token",
            "description": "<p>API token</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "type": "String",
            "optional": false,
            "field": "LoginFailed",
            "description": ""
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/user.route.ts",
    "groupTitle": "User"
  },
  {
    "type": "post",
    "url": "/user/signup",
    "title": "User signup",
    "name": "userSignup",
    "group": "User",
    "description": "<p>Signs user up and logs in automatically</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>Username</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "password",
            "description": "<p>Password according to policy</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "mail",
            "description": "<p>Valid email</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "displayName",
            "description": "<p>Full name</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "user",
            "description": "<p>User profile</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "token",
            "description": "<p>API token</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "500": [
          {
            "group": "500",
            "type": "String",
            "optional": false,
            "field": "InternalError",
            "description": "<p>Something went wrong during signup. Most likely to be during validation.</p>"
          }
        ]
      }
    },
    "deprecated": {
      "content": "Users should not be allowed to sign up by themselfes but rather be invited to use docSys"
    },
    "version": "0.0.0",
    "filename": "src/routes/user.route.ts",
    "groupTitle": "User"
  },
  {
    "type": "post",
    "url": "/user/unlock/:username",
    "title": "Unlock locked user",
    "name": "userUnlock",
    "group": "User",
    "description": "<p>Unlocks user and sets login attempts to 0</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>Username</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "user",
            "description": "<p>User profile</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "type": "String",
            "optional": false,
            "field": "AuthentificationError",
            "description": "<p>Not allowed to access ressource</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/user.route.ts",
    "groupTitle": "User"
  },
  {
    "type": "post",
    "url": "/user/:username",
    "title": "Update user",
    "name": "userUpdateSingle",
    "group": "User",
    "description": "<p>Updates a single user. Changes every property that is set in the request body.</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": ""
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "user",
            "description": "<p>Updated user object</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "401": [
          {
            "group": "401",
            "type": "String",
            "optional": false,
            "field": "AuthentificationError",
            "description": "<p>Not allowed to access ressource</p>"
          }
        ]
      }
    },
    "version": "0.0.0",
    "filename": "src/routes/user.route.ts",
    "groupTitle": "User"
  }
]
